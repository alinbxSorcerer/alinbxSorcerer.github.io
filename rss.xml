<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>A Magic Land Declared by David</title><link>https://alinbxsorcerer.github.io/</link><description>    Conjuring...    </description><atom:link href="https://alinbxsorcerer.github.io/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2019 &lt;a href="mailto:davad.fhl.wang@foxmail.com"&gt;David&lt;/a&gt; </copyright><lastBuildDate>Sun, 10 Nov 2019 14:52:08 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Emacs中的datetime与clock</title><link>https://alinbxsorcerer.github.io/posts/emacszhong-de-datetimeyu-clock/</link><dc:creator>David</dc:creator><description>&lt;div&gt;&lt;div class="section" id="id1"&gt;
&lt;h2&gt;前文概要:&lt;/h2&gt;
&lt;p&gt;时间管理的三件工具 (clock, datetime, calendar)
时间变量的顺序与时间表示的格式 (%a %b-d %H:%M %Y)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="emacs"&gt;
&lt;h2&gt;Emacs中的时间格式与任务的时间属性&lt;/h2&gt;
&lt;p&gt;时间管理的三件工具: 钟表, 日历, 以及二者结合的便利工具datetime.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://orgmode.org/manual/Dates-and-Times.html#Dates-and-Times"&gt;The Org Manual: Dates and
Times&lt;/a&gt;主要应用datetime和clock两个工具管理时间.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;时间戳的格式 （Datetime)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;datetime格式 &amp;lt;2019-05-18 sat 09:52&amp;gt; C-u C-c . 6个时间变量 %Y-%m-%d
%a %H:%M&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;date格式 &amp;lt;2019-05-18 sat&amp;gt; C-c . 4个时间变量&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="datetime"&gt;
&lt;h2&gt;Datetime时间戳与任务的时间属性&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;时间(戳)到底什么? 时间戳从概念上辨析为两个类别 1) appointment 2)
schedule. 可以将主动安排的时间理解为schedule,
被动参与的时间为appointment&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;事件(任务)的四个时间属性&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Repeater 三种repeater,&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;standard 时间戳后面 +1w day, week, month, year&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;过期后只需要补上一次, ++1w(比如每周给父母打电话)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以档次完成时间为下一个interval的开始点,比如3个周理一次发. 理发
.+3w; 任何时间点上理完发,自动从该时间点上启动下一轮repeat.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Time Span 会议的时间 &amp;lt;2019-05-18 sat 10:04&amp;gt;–&amp;lt;2019-05-18 sat 10:05&amp;gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Scheduled 任务的开始时间, SCHEDULED: &amp;lt;2019-05-18 sat&amp;gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Deadline 任务的截止时间 DEADLINE: &amp;lt;2019-05-18 sat&amp;gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;任务的监控与跟踪 Check&lt;/p&gt;
&lt;p&gt;整合管理deadline与schedule.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;org-check-deadlines&lt;/span&gt;&lt;/code&gt;, C-7 C-c / d
#7天内将要截止的任务.变量org-deadline-warning-days&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;org-check-before-date&lt;/span&gt;&lt;/code&gt;, given-date前的schedule and appointments&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;org-check-after-date&lt;/span&gt;&lt;/code&gt;, given-date后的schedule and appointments.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(这些功能并不好用)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="clock"&gt;
&lt;h2&gt;Clock计时与中断处理&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;基本计时功能, &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;org-clock-in&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;org-clock-out&lt;/span&gt;&lt;/code&gt; 可以手动修改计时,
然后调用=org-evaluate-time-range=或者=update-maybe=&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;任务的第五个属性, efforts 总结任务的5个属性, 1)schedule 2)deadline
3)repeater 4)time span 5)预测的time span(efforts).
efforts是核心参数,逐步提高对时间和任务的掌控.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Resolve idle time and continuous clocking
中断计时的问题,=调出来org-resolve-clocks=重新设置.k(keep),
s(substract),只用keep便可.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;计时与计算&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;任务的5个时间属性&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;idle中断计时的处理.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>emacs</category><category>time</category><guid>https://alinbxsorcerer.github.io/posts/emacszhong-de-datetimeyu-clock/</guid><pubDate>Sat, 18 May 2019 12:35:15 GMT</pubDate></item><item><title>时间管理的三件武器</title><link>https://alinbxsorcerer.github.io/posts/shi-jian-guan-li-de-san-jian-wu-qi/</link><dc:creator>David</dc:creator><description>&lt;div&gt;&lt;div class="section" id="id1"&gt;
&lt;h2&gt;前情概要&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;“时间变量的顺序与时间表示的格式”
总结了时间的10个变量及其直觉解析的顺序&lt;/div&gt;
&lt;div class="line"&gt;&lt;code class="docutils literal"&gt;Weekday Hour:Minute &lt;span class="pre"&gt;Month-Day&lt;/span&gt; WeekNumber Year&lt;/code&gt;&lt;/div&gt;
&lt;div class="line"&gt;“时间的感知与分析”阐述对时间的认知方法论以奠定高效利用和有效掌控时间的基础。&lt;/div&gt;
&lt;div class="line"&gt;“工欲善其事必先利其器”，接下来的问题便是时间管理的工具。&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;时间管理的三件武器&lt;/h2&gt;
&lt;p&gt;无论是手机的android系统还是Linux系统，都提供两项基本的时间管理工具日历(calendar)
and 时钟(clock). Calendar是date地图，提供全景式的鸟瞰图；
clock是指南针，指导具体的每一步应该迈向何处。
二者的结合形成第三个工具datetime。&lt;/p&gt;
&lt;p&gt;工具虽然简单，但如果不能抽象到认知的层面，则不能为己所用。试问，谁手机里没个日历，每个钟表呢。认知层面的结论是需要且仅需要这三件工具O(∩_∩)O。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;日历提供全景式鸟瞰&lt;/p&gt;
&lt;pre class="code shell"&gt;&lt;a name="rest_code_53584a6f6bef4e08831d734fa5c703ee-1"&gt;&lt;/a&gt;$ ncal -B &lt;span class="m"&gt;3&lt;/span&gt;  &lt;span class="c1"&gt;#ncal中的n竟然是new这个单词&lt;/span&gt;
&lt;a name="rest_code_53584a6f6bef4e08831d734fa5c703ee-2"&gt;&lt;/a&gt;    February &lt;span class="m"&gt;2019&lt;/span&gt;     March &lt;span class="m"&gt;2019&lt;/span&gt;        April &lt;span class="m"&gt;2019&lt;/span&gt;        May &lt;span class="m"&gt;2019&lt;/span&gt;
&lt;a name="rest_code_53584a6f6bef4e08831d734fa5c703ee-3"&gt;&lt;/a&gt;Su      &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="m"&gt;17&lt;/span&gt; &lt;span class="m"&gt;24&lt;/span&gt;        &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="m"&gt;17&lt;/span&gt; &lt;span class="m"&gt;24&lt;/span&gt; &lt;span class="m"&gt;31&lt;/span&gt;     &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="m"&gt;14&lt;/span&gt; &lt;span class="m"&gt;21&lt;/span&gt; &lt;span class="m"&gt;28&lt;/span&gt;        &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="m"&gt;12&lt;/span&gt; &lt;span class="m"&gt;19&lt;/span&gt; &lt;span class="m"&gt;26&lt;/span&gt;
&lt;a name="rest_code_53584a6f6bef4e08831d734fa5c703ee-4"&gt;&lt;/a&gt;Mo     &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;11&lt;/span&gt; &lt;span class="m"&gt;18&lt;/span&gt; &lt;span class="m"&gt;25&lt;/span&gt;        &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;11&lt;/span&gt; &lt;span class="m"&gt;18&lt;/span&gt; &lt;span class="m"&gt;25&lt;/span&gt;      &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;8&lt;/span&gt; &lt;span class="m"&gt;15&lt;/span&gt; &lt;span class="m"&gt;22&lt;/span&gt; &lt;span class="m"&gt;29&lt;/span&gt;        &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt; &lt;span class="m"&gt;27&lt;/span&gt;
&lt;a name="rest_code_53584a6f6bef4e08831d734fa5c703ee-5"&gt;&lt;/a&gt;Tu      &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="m"&gt;12&lt;/span&gt; &lt;span class="m"&gt;19&lt;/span&gt; &lt;span class="m"&gt;26&lt;/span&gt;        &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="m"&gt;12&lt;/span&gt; &lt;span class="m"&gt;19&lt;/span&gt; &lt;span class="m"&gt;26&lt;/span&gt;      &lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;9&lt;/span&gt; &lt;span class="m"&gt;16&lt;/span&gt; &lt;span class="m"&gt;23&lt;/span&gt; &lt;span class="m"&gt;30&lt;/span&gt;        &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="m"&gt;14&lt;/span&gt; &lt;span class="m"&gt;21&lt;/span&gt; &lt;span class="m"&gt;28&lt;/span&gt;
&lt;a name="rest_code_53584a6f6bef4e08831d734fa5c703ee-6"&gt;&lt;/a&gt;We     &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt; &lt;span class="m"&gt;27&lt;/span&gt;        &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt; &lt;span class="m"&gt;27&lt;/span&gt;      &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="m"&gt;17&lt;/span&gt; &lt;span class="m"&gt;24&lt;/span&gt;        &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;8&lt;/span&gt; &lt;span class="m"&gt;15&lt;/span&gt; &lt;span class="m"&gt;22&lt;/span&gt; &lt;span class="m"&gt;29&lt;/span&gt;
&lt;a name="rest_code_53584a6f6bef4e08831d734fa5c703ee-7"&gt;&lt;/a&gt;Th      &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="m"&gt;14&lt;/span&gt; &lt;span class="m"&gt;21&lt;/span&gt; &lt;span class="m"&gt;28&lt;/span&gt;        &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="m"&gt;14&lt;/span&gt; &lt;span class="m"&gt;21&lt;/span&gt; &lt;span class="m"&gt;28&lt;/span&gt;      &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;11&lt;/span&gt; &lt;span class="m"&gt;18&lt;/span&gt; &lt;span class="m"&gt;25&lt;/span&gt;        &lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;9&lt;/span&gt; &lt;span class="m"&gt;16&lt;/span&gt; &lt;span class="m"&gt;23&lt;/span&gt; &lt;span class="m"&gt;30&lt;/span&gt;
&lt;a name="rest_code_53584a6f6bef4e08831d734fa5c703ee-8"&gt;&lt;/a&gt;Fr       &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;8&lt;/span&gt;  &lt;span class="m"&gt;15&lt;/span&gt;   &lt;span class="m"&gt;22&lt;/span&gt;     &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;8&lt;/span&gt; &lt;span class="m"&gt;15&lt;/span&gt; &lt;span class="m"&gt;22&lt;/span&gt; &lt;span class="m"&gt;29&lt;/span&gt;       &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="m"&gt;12&lt;/span&gt; &lt;span class="m"&gt;19&lt;/span&gt; &lt;span class="m"&gt;26&lt;/span&gt;        &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="m"&gt;17&lt;/span&gt; &lt;span class="m"&gt;24&lt;/span&gt; &lt;span class="m"&gt;31&lt;/span&gt;
&lt;a name="rest_code_53584a6f6bef4e08831d734fa5c703ee-9"&gt;&lt;/a&gt;Sa  &lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;9&lt;/span&gt; &lt;span class="m"&gt;16&lt;/span&gt; &lt;span class="m"&gt;23&lt;/span&gt;        &lt;span class="m"&gt;2&lt;/span&gt;  &lt;span class="m"&gt;9&lt;/span&gt; &lt;span class="m"&gt;16&lt;/span&gt; &lt;span class="m"&gt;23&lt;/span&gt; &lt;span class="m"&gt;30&lt;/span&gt;       &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt; &lt;span class="m"&gt;27&lt;/span&gt;       &lt;span class="m"&gt;4&lt;/span&gt;  &lt;span class="m"&gt;11&lt;/span&gt; &lt;span class="m"&gt;18&lt;/span&gt; &lt;span class="m"&gt;25&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;时钟实施具体的测量&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_c90b746a16ab487bb17a20a4d810efc0-1"&gt;&lt;/a&gt;$ &lt;span class="nb"&gt;time&lt;/span&gt; sleep 10real    0m10.011suser    0m0.002ssys     0m0.001s
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;datetime整合二者，提供更加实用的功能&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_c4dce3da3e00466d85b277a0fd66c0de-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#贸易战倒计时&lt;/span&gt;
&lt;a name="rest_code_c4dce3da3e00466d85b277a0fd66c0de-2"&gt;&lt;/a&gt;$ &lt;span class="nv"&gt;TZ&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"America/New_York"&lt;/span&gt; date &lt;span class="c1"&gt;#美东夏季时间， 第十个变量时区。&lt;/span&gt;
&lt;a name="rest_code_c4dce3da3e00466d85b277a0fd66c0de-3"&gt;&lt;/a&gt;Thu May  &lt;span class="m"&gt;9&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;:04:30 EDT &lt;span class="m"&gt;2019&lt;/span&gt;  &lt;span class="c1"&gt;#Eatern Daylight Timer&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="python"&gt;
&lt;h2&gt;Python中的时间管理&lt;/h2&gt;
&lt;p&gt;以calendar,
clock(time),datetime与十个时间变量为基础，审视python的&lt;code class="docutils literal"&gt;calendar&lt;/code&gt;,
&lt;code class="docutils literal"&gt;time&lt;/code&gt;, and &lt;code class="docutils literal"&gt;datetime&lt;/code&gt;&lt;/p&gt;
&lt;div class="section" id="calender"&gt;
&lt;h3&gt;1. Calender&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.python.org/3/library/calendar.html"&gt;calendar — General calendar-related
functions&lt;/a&gt; &lt;a class="reference external" href="https://pymotw.com/3/calendar/index.html"&gt;calendar
— Work with Dates — PyMOTW
3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python中的calendar十个无关紧要的工具，没有人会费力不讨好的到这里查看日期和规划日程。&lt;/p&gt;
&lt;pre class="literal-block"&gt;class TextCalendar(Calendar)
 |  TextCalendar(firstweekday=0)
In [326]: cal = calendar.TextCalendar(calendar.MONDAY)       #周一作为一周的起始点
In [327]: cal.prmonth(2019, 5)
      May 2019
Mo Tu We Th Fr Sa Su
       1  2  3  4  5
 6  7  8  9 10 11 12
13 14 15 16 17 18 19
20 21 22 23 24 25 26
27 28 29 30 31
In [328]: cal.pryear(2019)
                                  2019
      January                                   February                                    March
Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su
    1  2  3  4  5  6                   1  2  3                                           1  2  3
 7  8  9 10 11 12 13           4  5  6  7  8  9 10                            4  5  6  7  8  9 10
14 15 16 17 18 19 20      11 12 13 14 15 16 17              11 12 13 14 15 16 17
21 22 23 24 25 26 27      18 19 20 21 22 23 24             18 19 20 21 22 23 24
28 29 30 31                       25 26 27 28                                  25 26 27 28 29 30 31
# 只了解下TextCalendar, pryear, prmonth&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="time"&gt;
&lt;h3&gt;2. Time&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.python.org/3/library/time.html#module-time"&gt;time — Time access and
conversions&lt;/a&gt;
&lt;a class="reference external" href="https://pymotw.com/3/calendar/index.html"&gt;calendar — Work with Dates — PyMOTW
3&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;与epoch time的相互转换&lt;/p&gt;
&lt;p&gt;Use the following functions to convert between time representations:
人以minutes计时， 机器以second计时。&lt;/p&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col style="width: 33%"&gt;
&lt;col style="width: 33%"&gt;
&lt;col style="width: 33%"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;th class="head"&gt;&lt;p&gt;From&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;To&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;Use&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;seconds since the
epoch&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;`struct_time&lt;/code&gt; &amp;lt;htt
ps://docs.python.org/
3/library/time.html#t
ime.struct_time&amp;gt;`__
in UTC&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;`gmtime()&lt;/code&gt; &amp;lt;https:
//docs.python.org/3/l
ibrary/time.html#time
.gmtime&amp;gt;`__&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;seconds since the
epoch&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;`struct_time&lt;/code&gt; &amp;lt;htt
ps://docs.python.org/
3/library/time.html#t
ime.struct_time&amp;gt;`__
in local time&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;`localtime()&lt;/code&gt; &amp;lt;htt
ps://docs.python.org/
3/library/time.html#t
ime.localtime&amp;gt;`__&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;`struct_time&lt;/code&gt; &amp;lt;htt
ps://docs.python.org/
3/library/time.html#t
ime.struct_time&amp;gt;`__
in UTC&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;seconds since the
epoch&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a href="https://alinbxsorcerer.github.io/posts/shi-jian-guan-li-de-san-jian-wu-qi/#id3"&gt;&lt;span class="problematic" id="id4"&gt;``&lt;/span&gt;&lt;/a&gt;&lt;cite&gt;calendar.timegm()&lt;/cite&gt;
` &amp;lt;&lt;a class="reference external" href="https://docs.pytho"&gt;https://docs.pytho&lt;/a&gt;
n.org/3/library/calen
dar.html#calendar.tim
egm&amp;gt;`__&lt;/p&gt;
&lt;div class="system-message" id="id3"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;span class="docutils literal"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;, line 119); &lt;em&gt;&lt;a href="https://alinbxsorcerer.github.io/posts/shi-jian-guan-li-de-san-jian-wu-qi/#id4"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Inline literal start-string without end-string.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;`struct_time&lt;/code&gt; &amp;lt;htt
ps://docs.python.org/
3/library/time.html#t
ime.struct_time&amp;gt;`__
in local time&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;seconds since the
epoch&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;`mktime()&lt;/code&gt; &amp;lt;https:
//docs.python.org/3/l
ibrary/time.html#time
.mktime&amp;gt;`__&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class="literal-block"&gt;#seconds to  timetuple
In [8]: time.localtime() #local time
Out[8]: time.struct_time(tm_year=2019, tm_mon=5, tm_mday=15, tm_hour=20, tm_min=4, tm_sec=17, tm_wday=2, tm_yday=135, tm_isdst=0)

In [9]: time.gmtime() #UTC time
Out[9]: time.struct_time(tm_year=2019, tm_mon=5, tm_mday=15, tm_hour=12, tm_min=4, tm_sec=31, tm_wday=2, tm_yday=135, tm_isdst=0)

In [11]: time.gmtime(100)  #
Out[11]: time.struct_time(tm_year=1970, tm_mon=1, tm_mday=1, tm_hour=0, tm_min=1, tm_sec=40, tm_wday=3, tm_yday=1, tm_isdst=0)
#timetuple to seconds
In [17]: calendar.timegm(time.gmtime()) #UTC time
Out[17]: 1557922318
In [18]: time.mktime(time.localtime()) #Local time
Out[18]: 1557922368.0&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;第十一个-时间变量 &lt;code class="docutils literal"&gt;tm_isdst&lt;/code&gt; daylight saving time夏季时间&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_76afcaebd7ff46da85b10c8efd5f074a-1"&gt;&lt;/a&gt;gmtime&lt;span class="o"&gt;(&lt;/span&gt;...&lt;span class="o"&gt;)&lt;/span&gt; -&amp;gt;time.struct_time,  &lt;span class="o"&gt;(&lt;/span&gt;strptime, localtime&lt;span class="o"&gt;)&lt;/span&gt;
&lt;a name="rest_code_76afcaebd7ff46da85b10c8efd5f074a-2"&gt;&lt;/a&gt;    gmtime&lt;span class="o"&gt;([&lt;/span&gt;seconds&lt;span class="o"&gt;])&lt;/span&gt; -&amp;gt; &lt;span class="o"&gt;(&lt;/span&gt;tm_year, tm_mon, tm_mday, tm_hour, tm_min,
&lt;a name="rest_code_76afcaebd7ff46da85b10c8efd5f074a-3"&gt;&lt;/a&gt;                           tm_sec, tm_wday, tm_yday, tm_isdst&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Processor Time and Timer&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_df8f4afcea724845802c4b7cce0907da-1"&gt;&lt;/a&gt;time.process_time&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;#cpu time  of kernel and user-space&lt;/span&gt;
&lt;a name="rest_code_df8f4afcea724845802c4b7cce0907da-2"&gt;&lt;/a&gt;time.process_time_ns&lt;span class="o"&gt;()&lt;/span&gt; -&amp;gt;int &lt;span class="c1"&gt;#not inclue sleep time&lt;/span&gt;
&lt;a name="rest_code_df8f4afcea724845802c4b7cce0907da-3"&gt;&lt;/a&gt;time.perf_counter&lt;span class="o"&gt;()&lt;/span&gt; -&amp;gt;float
&lt;a name="rest_code_df8f4afcea724845802c4b7cce0907da-4"&gt;&lt;/a&gt;time.perf_counter_ns&lt;span class="o"&gt;()&lt;/span&gt; -&amp;gt; int
&lt;a name="rest_code_df8f4afcea724845802c4b7cce0907da-5"&gt;&lt;/a&gt;time.thread_time&lt;span class="o"&gt;()&lt;/span&gt; -&amp;gt;float
&lt;a name="rest_code_df8f4afcea724845802c4b7cce0907da-6"&gt;&lt;/a&gt;time.thread_time_ns&lt;span class="o"&gt;()&lt;/span&gt; -&amp;gt;int
&lt;a name="rest_code_df8f4afcea724845802c4b7cce0907da-7"&gt;&lt;/a&gt;time.time&lt;span class="o"&gt;()&lt;/span&gt;
&lt;a name="rest_code_df8f4afcea724845802c4b7cce0907da-8"&gt;&lt;/a&gt;time.time_ns&lt;span class="o"&gt;()&lt;/span&gt;
&lt;a name="rest_code_df8f4afcea724845802c4b7cce0907da-9"&gt;&lt;/a&gt;time.sleep
&lt;a name="rest_code_df8f4afcea724845802c4b7cce0907da-10"&gt;&lt;/a&gt;time.monotonic&lt;span class="o"&gt;()&lt;/span&gt;
&lt;a name="rest_code_df8f4afcea724845802c4b7cce0907da-11"&gt;&lt;/a&gt;time.monotonic_ns&lt;span class="o"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Timezone Constants&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_17ead7ae41c7403295c22faadaa5294e-1"&gt;&lt;/a&gt;In &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;9&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: time.daylight
&lt;a name="rest_code_17ead7ae41c7403295c22faadaa5294e-2"&gt;&lt;/a&gt;Out&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;9&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: &lt;span class="m"&gt;0&lt;/span&gt;
&lt;a name="rest_code_17ead7ae41c7403295c22faadaa5294e-3"&gt;&lt;/a&gt;In &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: time.tzname
&lt;a name="rest_code_17ead7ae41c7403295c22faadaa5294e-4"&gt;&lt;/a&gt;Out&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'CST'&lt;/span&gt;, &lt;span class="s1"&gt;'CST'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;a name="rest_code_17ead7ae41c7403295c22faadaa5294e-5"&gt;&lt;/a&gt;In &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: time.altzone
&lt;a name="rest_code_17ead7ae41c7403295c22faadaa5294e-6"&gt;&lt;/a&gt;Out&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: -28800
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;两个重要的methods&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_73eec6e3becf4f12816e8fce3873fa68-1"&gt;&lt;/a&gt;time.strptime&lt;span class="o"&gt;(&lt;/span&gt;string, format&lt;span class="o"&gt;)&lt;/span&gt;
&lt;a name="rest_code_73eec6e3becf4f12816e8fce3873fa68-2"&gt;&lt;/a&gt;time.strftime&lt;span class="o"&gt;(&lt;/span&gt;format&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ctime&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_8bb28e77091a4f488188b2f7b3928279-1"&gt;&lt;/a&gt;In &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: time.asctime&lt;span class="o"&gt;(&lt;/span&gt;time.localtime&lt;span class="o"&gt;())&lt;/span&gt;
&lt;a name="rest_code_8bb28e77091a4f488188b2f7b3928279-2"&gt;&lt;/a&gt;Out&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: &lt;span class="s1"&gt;'Wed May 15 21:05:27 2019'&lt;/span&gt;
&lt;a name="rest_code_8bb28e77091a4f488188b2f7b3928279-3"&gt;&lt;/a&gt;In &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: time.ctime&lt;span class="o"&gt;()&lt;/span&gt;
&lt;a name="rest_code_8bb28e77091a4f488188b2f7b3928279-4"&gt;&lt;/a&gt;Out&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: &lt;span class="s1"&gt;'Wed May 15 21:05:32 2019'&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="datetime"&gt;
&lt;h3&gt;3. Datetime&lt;/h3&gt;
&lt;p&gt;复习calendar(date), clock(time)的逻辑，先看两个没用的函数。&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pymotw.com/3/datetime/index.html"&gt;datetime — Date and Time Value Manipulation — PyMOTW
3&lt;/a&gt;&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p&gt;datetime.date()&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_2ef5e77bc6a5419e98570a6f93d23a24-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;builtins&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="err"&gt;就是符号&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;x返回的内容&lt;/span&gt;
&lt;a name="rest_code_2ef5e77bc6a5419e98570a6f93d23a24-2"&gt;&lt;/a&gt; &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;month&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="nb"&gt;object&lt;/span&gt;
&lt;a name="rest_code_2ef5e77bc6a5419e98570a6f93d23a24-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;135&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;
&lt;a name="rest_code_2ef5e77bc6a5419e98570a6f93d23a24-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;135&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="mi"&gt;2019&lt;/span&gt;
&lt;a name="rest_code_2ef5e77bc6a5419e98570a6f93d23a24-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;136&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;
&lt;a name="rest_code_2ef5e77bc6a5419e98570a6f93d23a24-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;136&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;a name="rest_code_2ef5e77bc6a5419e98570a6f93d23a24-7"&gt;&lt;/a&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;137&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;day&lt;/span&gt;
&lt;a name="rest_code_2ef5e77bc6a5419e98570a6f93d23a24-8"&gt;&lt;/a&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;137&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;datetime.time()&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_035cb815ae814adaac81e26f9556b4b3-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;builtins&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;符号&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;X返回的内容&lt;/span&gt;
&lt;a name="rest_code_035cb815ae814adaac81e26f9556b4b3-2"&gt;&lt;/a&gt; &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;hour&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="n"&gt;minute&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="n"&gt;second&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="n"&gt;microsecond&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="n"&gt;tzinfo&lt;/span&gt;&lt;span class="p"&gt;]]]]])&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt; &lt;span class="nb"&gt;object&lt;/span&gt;
&lt;a name="rest_code_035cb815ae814adaac81e26f9556b4b3-3"&gt;&lt;/a&gt;  &lt;span class="c1"&gt;#5个参数,由大到小排列&lt;/span&gt;
&lt;a name="rest_code_035cb815ae814adaac81e26f9556b4b3-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;104&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;  &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;999999&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dateutil&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tz&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tzutc&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;a name="rest_code_035cb815ae814adaac81e26f9556b4b3-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;105&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;%f&lt;/span&gt;&lt;span class="s2"&gt;:%S:%M:%H %Z"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_035cb815ae814adaac81e26f9556b4b3-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;105&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="s1"&gt;'999999:30:15:06 UTC'&lt;/span&gt;
&lt;a name="rest_code_035cb815ae814adaac81e26f9556b4b3-7"&gt;&lt;/a&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;106&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;min&lt;/span&gt;
&lt;a name="rest_code_035cb815ae814adaac81e26f9556b4b3-8"&gt;&lt;/a&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;106&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_035cb815ae814adaac81e26f9556b4b3-9"&gt;&lt;/a&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;107&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;
&lt;a name="rest_code_035cb815ae814adaac81e26f9556b4b3-10"&gt;&lt;/a&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;107&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;999999&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_035cb815ae814adaac81e26f9556b4b3-11"&gt;&lt;/a&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="mi"&gt;108&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resolution&lt;/span&gt;
&lt;a name="rest_code_035cb815ae814adaac81e26f9556b4b3-12"&gt;&lt;/a&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;108&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;microseconds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#精确度&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;datetime.datetime&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_d387d5f6bd29419686887742a93a1e23-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#前面两个datetime.time and datetime.date没啥用.&lt;/span&gt;
&lt;a name="rest_code_d387d5f6bd29419686887742a93a1e23-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#这里的关键是第十个时间变量tzinfo&lt;/span&gt;
&lt;a name="rest_code_d387d5f6bd29419686887742a93a1e23-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d387d5f6bd29419686887742a93a1e23-4"&gt;&lt;/a&gt; &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;month&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="n"&gt;hour&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="n"&gt;minute&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="n"&gt;second&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="n"&gt;microsecond&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="n"&gt;tzinfo&lt;/span&gt;&lt;span class="p"&gt;]]]]])&lt;/span&gt;
&lt;a name="rest_code_d387d5f6bd29419686887742a93a1e23-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;Help&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;built&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;function&lt;/span&gt; &lt;span class="n"&gt;weekday&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_d387d5f6bd29419686887742a93a1e23-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_d387d5f6bd29419686887742a93a1e23-7"&gt;&lt;/a&gt;&lt;span class="n"&gt;weekday&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;
&lt;a name="rest_code_d387d5f6bd29419686887742a93a1e23-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Return&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;week&lt;/span&gt; &lt;span class="n"&gt;represented&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;a name="rest_code_d387d5f6bd29419686887742a93a1e23-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;Monday&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;Sunday&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;
&lt;a name="rest_code_d387d5f6bd29419686887742a93a1e23-10"&gt;&lt;/a&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tzinfo&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;dateutil&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tz&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gettz&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Asia/Shanghai"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_d387d5f6bd29419686887742a93a1e23-11"&gt;&lt;/a&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;201&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt;
&lt;a name="rest_code_d387d5f6bd29419686887742a93a1e23-12"&gt;&lt;/a&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;201&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;421561&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tzinfo&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tzfile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/usr/share/zoneinfo/Asia/Shanghai'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_d387d5f6bd29419686887742a93a1e23-13"&gt;&lt;/a&gt; &lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;208&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utcnow&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timetuple&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_d387d5f6bd29419686887742a93a1e23-14"&gt;&lt;/a&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;208&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;struct_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tm_year&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tm_mon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tm_mday&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tm_hour&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tm_min&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;49&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tm_sec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tm_wday&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tm_yday&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;129&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tm_isdst&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;datetime.timedelta and Arithmetic Opertions&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_5f4abba7cd484ac58071b88de5854fde-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;days&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;microseconds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;milliseconds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;minutes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hours&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;weeks&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_5f4abba7cd484ac58071b88de5854fde-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;219&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;days&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_5f4abba7cd484ac58071b88de5854fde-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;219&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;57&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;910880&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_5f4abba7cd484ac58071b88de5854fde-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;220&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="s2"&gt;"1 days ago"&lt;/span&gt;
&lt;a name="rest_code_5f4abba7cd484ac58071b88de5854fde-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;Wed&lt;/span&gt; &lt;span class="n"&gt;May&lt;/span&gt;  &lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;57&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;52&lt;/span&gt; &lt;span class="n"&gt;CST&lt;/span&gt; &lt;span class="mi"&gt;2019&lt;/span&gt;
&lt;a name="rest_code_5f4abba7cd484ac58071b88de5854fde-6"&gt;&lt;/a&gt; &lt;span class="c1"&gt;#转换为seconds的另外一种写法&lt;/span&gt;
&lt;a name="rest_code_5f4abba7cd484ac58071b88de5854fde-7"&gt;&lt;/a&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_5f4abba7cd484ac58071b88de5854fde-8"&gt;&lt;/a&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="s1"&gt;'0:01:40'&lt;/span&gt;
&lt;a name="rest_code_5f4abba7cd484ac58071b88de5854fde-9"&gt;&lt;/a&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"%H:%M:%S"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gmtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_5f4abba7cd484ac58071b88de5854fde-10"&gt;&lt;/a&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="s1"&gt;'00:50:00'&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="shell"&gt;
&lt;h2&gt;Shell的时间管理工具&lt;/h2&gt;
&lt;div class="section" id="calendar"&gt;
&lt;h3&gt;1.Calendar&lt;/h3&gt;
&lt;pre class="literal-block"&gt;$ ncal -1
$ ncal -M #Monday as the first day
$ ncal -w #weeknumber
$ncal -y -m;
$ncal -d yyyy-mm
$ncal yyyy-mm-dd#highlight the current date
$ ncal -A3 -B4
#就只有这么多操作&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="clock-time"&gt;
&lt;h3&gt;2.Clock(Time)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;hwclock&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_240cbe0adec7479fb6904ad856f62dd0-1"&gt;&lt;/a&gt;In &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;31&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: !sudo hwclock
&lt;a name="rest_code_240cbe0adec7479fb6904ad856f62dd0-2"&gt;&lt;/a&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-05-15 &lt;span class="m"&gt;21&lt;/span&gt;:25:29.514803+08:00
&lt;a name="rest_code_240cbe0adec7479fb6904ad856f62dd0-3"&gt;&lt;/a&gt;---------------------------------------------------
&lt;a name="rest_code_240cbe0adec7479fb6904ad856f62dd0-4"&gt;&lt;/a&gt;NAME
&lt;a name="rest_code_240cbe0adec7479fb6904ad856f62dd0-5"&gt;&lt;/a&gt;       hwclock - &lt;span class="nb"&gt;time&lt;/span&gt; clocks utility
&lt;a name="rest_code_240cbe0adec7479fb6904ad856f62dd0-6"&gt;&lt;/a&gt;FILES
&lt;a name="rest_code_240cbe0adec7479fb6904ad856f62dd0-7"&gt;&lt;/a&gt;       /etc/adjtime
&lt;a name="rest_code_240cbe0adec7479fb6904ad856f62dd0-8"&gt;&lt;/a&gt;              The configuration and state file &lt;span class="k"&gt;for&lt;/span&gt; hwclock.
&lt;a name="rest_code_240cbe0adec7479fb6904ad856f62dd0-9"&gt;&lt;/a&gt;       /etc/localtime
&lt;a name="rest_code_240cbe0adec7479fb6904ad856f62dd0-10"&gt;&lt;/a&gt;              The system timezone file
&lt;a name="rest_code_240cbe0adec7479fb6904ad856f62dd0-11"&gt;&lt;/a&gt;       /usr/share/zoneinfo/
&lt;a name="rest_code_240cbe0adec7479fb6904ad856f62dd0-12"&gt;&lt;/a&gt;              The system timezone database directory.
&lt;a name="rest_code_240cbe0adec7479fb6904ad856f62dd0-13"&gt;&lt;/a&gt;       Device files hwclock may try &lt;span class="k"&gt;for&lt;/span&gt; Hardware Clock access:
&lt;a name="rest_code_240cbe0adec7479fb6904ad856f62dd0-14"&gt;&lt;/a&gt;       /dev/rtc0
&lt;a name="rest_code_240cbe0adec7479fb6904ad856f62dd0-15"&gt;&lt;/a&gt;       /dev/rtc
&lt;a name="rest_code_240cbe0adec7479fb6904ad856f62dd0-16"&gt;&lt;/a&gt;       /dev/misc/rtc
&lt;a name="rest_code_240cbe0adec7479fb6904ad856f62dd0-17"&gt;&lt;/a&gt;       /dev/efirtc
&lt;a name="rest_code_240cbe0adec7479fb6904ad856f62dd0-18"&gt;&lt;/a&gt;       /dev/misc/efirtc
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;time (processing profile)&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_f4828411ad2545c7864b024eabdab6de-1"&gt;&lt;/a&gt;    $ &lt;span class="nb"&gt;time&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;tree  /usr/share/zoneinfo &lt;span class="p"&gt;|&lt;/span&gt; grep -i &lt;span class="s2"&gt;"prc"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;a name="rest_code_f4828411ad2545c7864b024eabdab6de-2"&gt;&lt;/a&gt;    │   ├── Chongqing -&amp;gt; ../PRC
&lt;a name="rest_code_f4828411ad2545c7864b024eabdab6de-3"&gt;&lt;/a&gt;    │   ├── Chungking -&amp;gt; ../PRC
&lt;a name="rest_code_f4828411ad2545c7864b024eabdab6de-4"&gt;&lt;/a&gt;    │   ├── Harbin -&amp;gt; ../PRC
&lt;a name="rest_code_f4828411ad2545c7864b024eabdab6de-5"&gt;&lt;/a&gt;    │   ├── Shanghai -&amp;gt; ../PRC
&lt;a name="rest_code_f4828411ad2545c7864b024eabdab6de-6"&gt;&lt;/a&gt;    │   │   ├── Chongqing -&amp;gt; ../../PRC
&lt;a name="rest_code_f4828411ad2545c7864b024eabdab6de-7"&gt;&lt;/a&gt;    │   │   ├── Chungking -&amp;gt; ../../PRC
&lt;a name="rest_code_f4828411ad2545c7864b024eabdab6de-8"&gt;&lt;/a&gt;    │   │   ├── Harbin -&amp;gt; ../../PRC
&lt;a name="rest_code_f4828411ad2545c7864b024eabdab6de-9"&gt;&lt;/a&gt;    │   │   ├── Shanghai -&amp;gt; ../../PRC
&lt;a name="rest_code_f4828411ad2545c7864b024eabdab6de-10"&gt;&lt;/a&gt;    │   ├── PRC -&amp;gt; ../PRC
&lt;a name="rest_code_f4828411ad2545c7864b024eabdab6de-11"&gt;&lt;/a&gt;    ├── PRC
&lt;a name="rest_code_f4828411ad2545c7864b024eabdab6de-12"&gt;&lt;/a&gt;    │   │   ├── Chongqing -&amp;gt; ../PRC
&lt;a name="rest_code_f4828411ad2545c7864b024eabdab6de-13"&gt;&lt;/a&gt;    │   │   ├── Chungking -&amp;gt; ../PRC
&lt;a name="rest_code_f4828411ad2545c7864b024eabdab6de-14"&gt;&lt;/a&gt;    │   │   ├── Harbin -&amp;gt; ../PRC
&lt;a name="rest_code_f4828411ad2545c7864b024eabdab6de-15"&gt;&lt;/a&gt;    │   │   ├── Shanghai -&amp;gt; ../PRC
&lt;a name="rest_code_f4828411ad2545c7864b024eabdab6de-16"&gt;&lt;/a&gt;    │   ├── PRC
&lt;a name="rest_code_f4828411ad2545c7864b024eabdab6de-17"&gt;&lt;/a&gt;
&lt;a name="rest_code_f4828411ad2545c7864b024eabdab6de-18"&gt;&lt;/a&gt;    real    0m0.017s
&lt;a name="rest_code_f4828411ad2545c7864b024eabdab6de-19"&gt;&lt;/a&gt;    user    0m0.015s
&lt;a name="rest_code_f4828411ad2545c7864b024eabdab6de-20"&gt;&lt;/a&gt;    sys     0m0.004s
&lt;a name="rest_code_f4828411ad2545c7864b024eabdab6de-21"&gt;&lt;/a&gt;
&lt;a name="rest_code_f4828411ad2545c7864b024eabdab6de-22"&gt;&lt;/a&gt;&lt;span class="m"&gt;3&lt;/span&gt;.Datetime
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;span id="datetime-1"&gt;&lt;/span&gt;&lt;h3&gt;3.Datetime&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;timedatectl&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_167a6b8708a947a4afd972d1678d8cec-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#systemd的service&lt;/span&gt;
&lt;a name="rest_code_167a6b8708a947a4afd972d1678d8cec-2"&gt;&lt;/a&gt;$ timedatectl
&lt;a name="rest_code_167a6b8708a947a4afd972d1678d8cec-3"&gt;&lt;/a&gt;               Local time: Thu &lt;span class="m"&gt;2019&lt;/span&gt;-05-09 &lt;span class="m"&gt;21&lt;/span&gt;:30:27 CST
&lt;a name="rest_code_167a6b8708a947a4afd972d1678d8cec-4"&gt;&lt;/a&gt;           Universal time: Thu &lt;span class="m"&gt;2019&lt;/span&gt;-05-09 &lt;span class="m"&gt;13&lt;/span&gt;:30:27 UTC
&lt;a name="rest_code_167a6b8708a947a4afd972d1678d8cec-5"&gt;&lt;/a&gt;                 RTC time: Thu &lt;span class="m"&gt;2019&lt;/span&gt;-05-09 &lt;span class="m"&gt;13&lt;/span&gt;:30:27
&lt;a name="rest_code_167a6b8708a947a4afd972d1678d8cec-6"&gt;&lt;/a&gt;                Time zone: Asia/Shanghai &lt;span class="o"&gt;(&lt;/span&gt;CST, +0800&lt;span class="o"&gt;)&lt;/span&gt;
&lt;a name="rest_code_167a6b8708a947a4afd972d1678d8cec-7"&gt;&lt;/a&gt;System clock synchronized: yes
&lt;a name="rest_code_167a6b8708a947a4afd972d1678d8cec-8"&gt;&lt;/a&gt;              NTP service: active
&lt;a name="rest_code_167a6b8708a947a4afd972d1678d8cec-9"&gt;&lt;/a&gt;
&lt;a name="rest_code_167a6b8708a947a4afd972d1678d8cec-10"&gt;&lt;/a&gt; - Check the current system clock time:
&lt;a name="rest_code_167a6b8708a947a4afd972d1678d8cec-11"&gt;&lt;/a&gt;   timedatectl
&lt;a name="rest_code_167a6b8708a947a4afd972d1678d8cec-12"&gt;&lt;/a&gt; - Set the &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt; of the system clock directly:
&lt;a name="rest_code_167a6b8708a947a4afd972d1678d8cec-13"&gt;&lt;/a&gt;   timedatectl set-time &lt;span class="o"&gt;{{&lt;/span&gt;&lt;span class="s2"&gt;"yyyy-MM-dd hh:mm:ss"&lt;/span&gt;&lt;span class="o"&gt;}}&lt;/span&gt;
&lt;a name="rest_code_167a6b8708a947a4afd972d1678d8cec-14"&gt;&lt;/a&gt;
&lt;a name="rest_code_167a6b8708a947a4afd972d1678d8cec-15"&gt;&lt;/a&gt; - List available timezones:
&lt;a name="rest_code_167a6b8708a947a4afd972d1678d8cec-16"&gt;&lt;/a&gt;   timedatectl list-timezones
&lt;a name="rest_code_167a6b8708a947a4afd972d1678d8cec-17"&gt;&lt;/a&gt;
&lt;a name="rest_code_167a6b8708a947a4afd972d1678d8cec-18"&gt;&lt;/a&gt; - Set the system timezone:
&lt;a name="rest_code_167a6b8708a947a4afd972d1678d8cec-19"&gt;&lt;/a&gt;   timedatectl set-timezone &lt;span class="o"&gt;{{&lt;/span&gt;timezone&lt;span class="o"&gt;}}&lt;/span&gt;
&lt;a name="rest_code_167a6b8708a947a4afd972d1678d8cec-20"&gt;&lt;/a&gt;
&lt;a name="rest_code_167a6b8708a947a4afd972d1678d8cec-21"&gt;&lt;/a&gt; - Enable Network Time Protocol &lt;span class="o"&gt;(&lt;/span&gt;NTP&lt;span class="o"&gt;)&lt;/span&gt; synchronization:
&lt;a name="rest_code_167a6b8708a947a4afd972d1678d8cec-22"&gt;&lt;/a&gt;   timedatectl set-ntp on
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;date (最趁手的一个工具)&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 日常应用date作为思考工具.&lt;/span&gt;
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-2"&gt;&lt;/a&gt;In &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;9&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: time.time&lt;span class="o"&gt;()&lt;/span&gt;
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-3"&gt;&lt;/a&gt;Out&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;9&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: &lt;span class="m"&gt;1557406444&lt;/span&gt;.1336956
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-4"&gt;&lt;/a&gt;In &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: !date +%s
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-5"&gt;&lt;/a&gt;&lt;span class="m"&gt;1557406449&lt;/span&gt;
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-6"&gt;&lt;/a&gt;$ date -d @&lt;span class="k"&gt;$(&lt;/span&gt;date +%s&lt;span class="k"&gt;)&lt;/span&gt;　&lt;span class="c1"&gt;#date -d @1557406449&lt;/span&gt;
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-7"&gt;&lt;/a&gt;Thu May  &lt;span class="m"&gt;9&lt;/span&gt; &lt;span class="m"&gt;21&lt;/span&gt;:11:15 CST &lt;span class="m"&gt;2019&lt;/span&gt;
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-9"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#基本的操作&lt;/span&gt;
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-10"&gt;&lt;/a&gt;$ date -u +&lt;span class="s2"&gt;"%Y-%m-%dT%H:%M:%SZ"&lt;/span&gt;
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-11"&gt;&lt;/a&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-05-09T12:55:31Z
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-12"&gt;&lt;/a&gt;
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-13"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#Future date and time&lt;/span&gt;
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-14"&gt;&lt;/a&gt;$ date -d &lt;span class="s2"&gt;" two weeks"&lt;/span&gt;
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-15"&gt;&lt;/a&gt;date: invalid date ‘ two weeks’
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-16"&gt;&lt;/a&gt;$ date -d &lt;span class="s2"&gt;"2 weeks"&lt;/span&gt;
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-17"&gt;&lt;/a&gt;Thu May &lt;span class="m"&gt;23&lt;/span&gt; &lt;span class="m"&gt;21&lt;/span&gt;:20:17 CST &lt;span class="m"&gt;2019&lt;/span&gt;
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-18"&gt;&lt;/a&gt;$ date -d &lt;span class="s2"&gt;"next fri"&lt;/span&gt; &lt;span class="c1"&gt;#只有两个变量能够以文字表述 Month and Weekday&lt;/span&gt;
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-19"&gt;&lt;/a&gt;Fri May &lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="m"&gt;00&lt;/span&gt;:00:00 CST &lt;span class="m"&gt;2019&lt;/span&gt;
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-20"&gt;&lt;/a&gt;
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-21"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#the elpased date and time&lt;/span&gt;
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-22"&gt;&lt;/a&gt;$ date -d &lt;span class="s2"&gt;"last thursday"&lt;/span&gt;
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-23"&gt;&lt;/a&gt;Thu May  &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;00&lt;/span&gt;:00:00 CST &lt;span class="m"&gt;2019&lt;/span&gt;
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-24"&gt;&lt;/a&gt;$ date -d &lt;span class="s2"&gt;"2 days ago"&lt;/span&gt;
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-25"&gt;&lt;/a&gt;Tue May  &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="m"&gt;21&lt;/span&gt;:22:28 CST &lt;span class="m"&gt;2019&lt;/span&gt;
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-26"&gt;&lt;/a&gt;$ date -d &lt;span class="s2"&gt;"last month"&lt;/span&gt;
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-27"&gt;&lt;/a&gt;Tue Apr  &lt;span class="m"&gt;9&lt;/span&gt; &lt;span class="m"&gt;21&lt;/span&gt;:22:39 CST &lt;span class="m"&gt;2019&lt;/span&gt;
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-28"&gt;&lt;/a&gt;
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-29"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#贸易战倒计时&lt;/span&gt;
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-30"&gt;&lt;/a&gt;$ &lt;span class="nv"&gt;TZ&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"America/New_York"&lt;/span&gt; date
&lt;a name="rest_code_fd8cafc516294d11b4670867f1d74a9f-31"&gt;&lt;/a&gt;Thu May  &lt;span class="m"&gt;9&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;:04:30 EDT &lt;span class="m"&gt;2019&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="emacs"&gt;
&lt;h2&gt;Emacs中的时间管理&lt;/h2&gt;
&lt;p&gt;….&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;时间管理的三个工具, time, datetime, calendar(从微观到宏观处理5, 8,
10个时间变量)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Our units of temporal measurement, from seconds on up to months, are
so complicated, asymmetrical and disjunctive so as to make coherent
mental reckoning in time all but impossible. Indeed, had some
tyrannical god contrived to enslave our minds to time, to make it all
but impossible for us to escape subjection to sodden routines and
unpleasant surprises, he could hardly have done better than handing
down our present system. It is like a set of trapezoidal building
blocks, with no vertical or horizontal surfaces, like a language in
which the simplest thought demands constructions, useless particles
and lengthy circumlocutions. Unlike the more successful patterns of
language and science, which enable us to face experience boldly or at
least level-headedly, our system of temporal calculation silently and
persistently encourages our terror of time.&lt;/p&gt;
&lt;p&gt;… It is as though architects had to measure length in feet, width in
meters and height in ells; as though basic instruction manuals
demanded a knowledge of five different languages. It is no wonder
then that we often look into our own immediate past or future, last
Tuesday or a week from Sunday, with feelings of helpless confusion. …&lt;/p&gt;
&lt;p class="attribution"&gt;—Robert Grudin, Time and the Art of Living.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;哈哈哈～，神吐槽。因此需要将so complicated, asymmetrical and disjunctive
抽象为calender, time, datetime。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;p&gt;&lt;cite&gt;GNU Coreutils: Date input
formats &amp;lt;https://www.gnu.org/software/coreutils/manual/html_node/Date-input-formats.html#Date-input-formats&amp;gt;&lt;/cite&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>bash</category><category>emacs</category><category>python</category><category>time</category><category>时间管理</category><guid>https://alinbxsorcerer.github.io/posts/shi-jian-guan-li-de-san-jian-wu-qi/</guid><pubDate>Wed, 15 May 2019 12:53:29 GMT</pubDate></item><item><title>时间的感知与分析</title><link>https://alinbxsorcerer.github.io/posts/shi-jian-de-gan-zhi-yu-fen-xi/</link><dc:creator>David</dc:creator><description>&lt;div&gt;&lt;p&gt;在前文"时间变量的顺序与格式"中分析得到感知时间的5个基本变量及其顺序.
&lt;code class="docutils literal"&gt;Weekday  Hour:Minute &lt;span class="pre"&gt;Month-Day&lt;/span&gt;&lt;/code&gt; 记作 &lt;code class="docutils literal"&gt;%w &lt;span class="pre"&gt;%H:%M&lt;/span&gt; &lt;span class="pre"&gt;%d-%m&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;对时间流逝的测量分为两个维度:
一是仪器在微观层面上的的准确测量,比如钟表或者计算机
二是直觉在宏观层面上的粗略感知.&lt;/p&gt;
&lt;p&gt;接下来的问题,如何有效的把握住一天的时间,如何对一天24小时有良好的感知.&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;宏观层面粗颗粒度的时间感知&lt;/h2&gt;
&lt;p&gt;一天有24小时，大脑的直觉系统（系统一）不能直接处理24这个复杂的数字，需要调动"系统二"理性的助攻．
"系统一"能处理3以内的数字,10以内的数字,比如列清单最好3项,最多七项,更多则聊胜于无.&lt;/p&gt;
&lt;p&gt;因此应该分割24小时成10内的模块.&lt;/p&gt;
&lt;p&gt;选项一: 二分,白天和黑夜 选项二: 四分, 象限图 (比如AM, PM, 黑夜, 凌晨)
选项三: 八分&lt;/p&gt;
&lt;p&gt;二分与四分的颗粒度过大,八分是不错的选项,
以3个小时为一个模块,称为Phrase阶段.&lt;/p&gt;
&lt;p&gt;参考维基百科的划分&lt;a class="reference external" href="https://zh.wikipedia.org/wiki/%E8%96%84%E6%9A%AE"&gt;一日之时细分&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col style="width: 5%"&gt;
&lt;col style="width: 14%"&gt;
&lt;col style="width: 13%"&gt;
&lt;col style="width: 41%"&gt;
&lt;col style="width: 28%"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;th class="head"&gt;&lt;p&gt;No&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;时间段&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;维基命名&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;修正命名&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;理由&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;１&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;0时~3时&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;凌晨&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;深夜(deep night or good night)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;后面详叙&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;２&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;3时~6时&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;拂晓&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;拂晓(或者破晓, dawn)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;３&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;6时~9时&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;早晨&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;晨曦(or 晨曦,清晨 Morning)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;将晨字放到前面&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;４&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;9时~12时&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;午前&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;午前(forenoon)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;５&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;12时~15时&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;午后&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;午后(afternoon postnoon)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;没有更好的英语词汇&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;６&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;15时~18时&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;傍晚&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;傍晚(evening, approach)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;也没有更好的英语词汇&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;７&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;18时~21时&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;薄暮&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;薄暮(Dusk)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;８&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;21时~24时&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;深夜&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;夜晚(Night)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;$&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;将”凌晨”修改为”深夜”的理由是,
看到”晨”这个字眼,将联想到'一天之计在于晨',潜意识自动被调动起来,不利于晚间的休息和养成良好的作息习惯，取名深夜或者晚安.
时间段的命名,中文的表述更为精确,因此后续采用中文命名.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;微观层面细颗粒度的时间感知&lt;/h2&gt;
&lt;p&gt;对时间的精确测量很简单，低头看一眼手表便可．难点在于如何引导直觉或者大脑的"系统一"感知到精确的时间．&lt;/p&gt;
&lt;p&gt;具体的例子，如何认识"早上 6:30"这个时刻．&lt;/p&gt;
&lt;p&gt;首先看Hour(6点),
盯着看半天,学着格物致知,并不能读到什么信息能在宏观层面上上辅助直觉的理解.
用点数学，可以借助＇分数＇辅助直觉．将6点读成=6/24=,
含义是一天的24小时中的6个小时已经流逝而去；
如此便将微观的时刻与宏观的一天,以进度条的方式关联起来.对大脑提供的直接信息是,
从一天这个整体概念中感知具体的时刻.&lt;/p&gt;
&lt;p&gt;再看Minute(30分), 同理可以读成=30/60=, 将minute与hour关联起来.
以60分钟为底数,可以理解为时间感知的最小单位是10分钟,而选择60又比选择6好一点儿.&lt;/p&gt;
&lt;p&gt;整体来看=06:30=这个时刻 &lt;code class="docutils literal"&gt;06/24: 30/60&lt;/code&gt;&lt;/p&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;选择起始时刻&lt;/h3&gt;
&lt;p&gt;如上所述,早上6点,可以表示为6/24,单靠直觉便能感知到具体的时刻在一整天这个进度中的位置。&lt;/p&gt;
&lt;p&gt;观察6/24,会发现一个问题,如果早晨6点起床,
那么在睁开眼醒来的一瞬间,这一天的24小中的6个小时就没了，
一天的的1/4就没了。这太让人沮丧, 真没有心情做事.
如果醒来却拥有完整无缺的24小时该有多么美妙,
那样会更加积极地投入到一天之中.&lt;/p&gt;
&lt;p&gt;解决方案是选择早上6:00作为一天起始点.
该方案的优点，除了可以完整的获得24小时之外,还能奖励早起和辅助养成良好的作息习惯.&lt;/p&gt;
&lt;p&gt;比如5点起床,意味着这一天多出了一个小时,仿佛是从时间之神Chrones手中偷得了一个小时，赢在起跑线上，
构筑起来很强的心理优势.&lt;/p&gt;
&lt;p&gt;另外一个意外之喜则是可以鼓励早睡.&lt;/p&gt;
&lt;p&gt;选择新的起始时刻后,重新审视一天的八分图.&lt;/p&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col style="width: 5%"&gt;
&lt;col style="width: 14%"&gt;
&lt;col style="width: 13%"&gt;
&lt;col style="width: 41%"&gt;
&lt;col style="width: 28%"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;th class="head"&gt;&lt;p&gt;No&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;时间段&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;维基命名&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;修正命名&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;理由&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;7&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;0时~3时&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;凌晨&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;深夜(deep night or good night)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;后面详叙&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;8&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;3时~6时&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;拂晓&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;拂晓(或者破晓, dawn)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;1&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;6时~9时&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;早晨&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;晨曦(or 晨曦,清晨 Morning)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;将晨字放到前面&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;2&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;9时~12时&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;午前&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;午前(forenoon)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;3&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;12时~15时&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;午后&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;午后(afternoon postnoon)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;没有更好的英语词汇&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;4&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;15时~18时&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;傍晚&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;傍晚(evening, approach)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;也没有更好的英语词汇&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;5&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;18时~21时&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;薄暮&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;薄暮(Dusk)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;6&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;21时~24时&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;深夜&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;夜晚(Night)&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;$&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;如上图,晚上12点并非一天的结束,
因此熬夜偷不到任何时间,也不会获得比别人多出来更多的时间的虚假心理满足感.相反,熬夜是障碍,导致不能早起,导致不能从chrones手中偷得额外时间.&lt;/p&gt;
&lt;p&gt;小结：选择6点作为起始时刻&lt;/p&gt;
&lt;p&gt;1)建立心理优势账户 2)从理性和感性两个方面否定熬夜 3)养成早起的好习惯。&lt;/p&gt;
&lt;p&gt;将6:00理解成 00:00.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;两个重要时间节点&lt;/h3&gt;
&lt;p&gt;以早晨６点作为时间感知的０点，有两个重要的时间节点里程碑：
一是中午12点，这是AM与 PM的划分点，是白昼的一半
二是下午６点，这是一整天的一半．&lt;/p&gt;
&lt;p&gt;可以通过这两个时间节点下的进度和已完工作，粗略估算和预测．而且很重要的一点，假如在下午６点预估到不能按期完成任务，可以选择的方案是早起赶工而非熬夜赶工．(晚上12点非一天的结束，拂晓6点才是昨日之终和今日之始)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;12小时制还是24小时制&lt;/h3&gt;
&lt;p&gt;首先来看12小时制，将一天分为白昼和黑夜两个部分，这一点很棒负，符合人的自然直觉。接下来分别针对白昼和黑夜进行计时。
白昼是从早上６点到晚上６点，黑夜是从晚上６点到早上６点。早上６点可以表示为　(6-6)/12,
白天的0/12.
这样划分的结果是以地平线作为昼夜分割线，与AM,PM将中午12点作为一天的分割线的标准相冲突。不仅需要做6-6的转换，还需要做AM,
PM转换。&lt;/p&gt;
&lt;p&gt;其次24小时制,
24小时保证了一天的连贯性，不论是5/24还是15/24，都在同一个尺度下比较。&lt;/p&gt;
&lt;p&gt;综上，暂时选择24小时制。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;认识具体时间的算法&lt;/h2&gt;
&lt;p&gt;在宏观层面的八分图与微观层面的分数表示的基础上，如何解析一个具体的时间呢？
比如一个比较古怪的14:39这个时间如何理解？&lt;/p&gt;
&lt;p&gt;第一步， 先看Hour(14), 从粗略上感知，
14点是午后，这是从电脑或者手表等仪器上的数字读取的。
但是，午后这个时间概念，不需要借助仪器，可以从身体的疲惫状态，从窗外光线的强度，甚至从个人的生物钟便可以感知到（大体会有感觉一天过去了多久）。单单依靠感觉或许不能准确估量到小时这个单位，但是估摸到是午后，傍晚，夕阳西下还是旭日东升？
是黎明还是黄昏？
在3个小时的误差允许的范围内，应该是没有问题的。或许，长时间的训练还能提高个体的感受力，做仪器和工具的主人而非奴隶；&lt;/p&gt;
&lt;p&gt;第二步，
所以第一步工作并非读14这个数字，而是调用直觉，调用人的动物本能去感受一下当前的时间，大概估算出是八分图的哪一个阶段。比如吃完午饭似乎有一段时间了，但是工作起来没精神，大概这个就是午后综合征。拿到"午后"这个概念之后，继续分析"午后"是什么意思？潜意识里如何理解"午后"呢。午后是白昼的一半时间已经过去了，现在处在白昼3/4的位置上，用八分图表示则是3/8的位置。模糊概念上"午后"等于准确测量的"3/8"。但是只需要停留在"午后"这个概念即可，不必显性的将3/8读出来，那是潜意识的工作&lt;/p&gt;
&lt;p&gt;第三步，通过前两部得到"午后"这个时间段，并且通过调用感受力去判断出这个时间段的过程，潜意识里或许有了如3/8这样的数字。午后就是3/8，但午后这个文字描述更加亲切，不需要消耗脑力。
现在开始看表，一看是14:39，
14这个数字很亲切，因为与直觉感受到"午后"是相一致的。调用大脑的系统二读14点这个数字是=14/24=，
这个进度挺可怕，刚吃完午饭，一天的24小时里的14个小时已经没了，
着实使人沮丧。好消息是要从14里减去6， &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;（14-6）/&lt;/span&gt; 24 = 8/24&lt;/code&gt;,
减法算的太开心了。如此与模糊概念上的"午后"便对应起来。
在粗颗粒度下，当前处在大约一天中3/8的位置，而理性的细颗粒度下则是在=8/24=这个准确的位置上(一天还只过去了三分之一，还拥有三分之二的时间筹码在手上）e。&lt;/p&gt;
&lt;p&gt;第四步， 读minutes， 39表示为39/60,
一个小时是最宝贵的资源，所有的工作都在一个一个的一个小时内展开。定性分析一个小时，可以将钟表盘想象成一个没有数字刻度的饼图，
粗略估算下饼图的切口在哪里，
39/60就是一半多一点点。定量分析则以10分钟为一个单位，
将饼图分为六个部分。&lt;/p&gt;
&lt;p&gt;第五步， 实际的工作是在一个小时的范围内，读到39/60,
定性分析下，原计划一个小时内完成的工作能否如期交付，
定量分析下按照当前的进度大概需要几个小时？&lt;/p&gt;
&lt;p&gt;总结， 前两部（2/5）从感觉上定性分析当前所处的时间段，
第三步和第四步调用理性定量读取时间，
第五步，有效利用最有价值的资源每一个一个小时。&lt;/p&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;估算时间段&lt;/h3&gt;
&lt;p&gt;分数有定性和定量， 串通理性与感性，宏观与微观的神奇作用。
具体的例子，比如有好看的综艺节目大概一个小时，用分数定性看一眼=1/24=，一天的二十四之一；
刷个手机半个小时
30/60，一个小时的一半没了，而一个小时是一天的二十四分之一。&lt;/p&gt;
&lt;p&gt;分数的方法可以帮助explicitly珍惜时间。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;粗颗粒度下应用八分图辅助直觉粗略的感知一天内的时间，应用饼图粗略感知一个小时内的时间；
细颗粒度下应用分数15/24, 41/60,定性与定量相结合分析。
挥霍时间前，先用24这个数字定性审视感受一下。&lt;/p&gt;
&lt;p&gt;17:31这个时间， 1) 傍晚，傍晚这个词太好了，傍-&amp;gt;依傍，approach, 向晚。 2)
粗略感受下在八分图中的位置,
17点是个特殊的数字，距离之前定义的两个重要的时间节点中的18:00很近。 3)
(17-6)/24 = 11/24, 马上就12/24,一天的一半即将结束。 4) 31/60
同时也从饼图上感受下这一个小时的流逝 5)
根据31/60定性和定量分析当前的工作。&lt;/p&gt;
&lt;p&gt;综上，再来看具体的一天, 三个变量最重要，&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;周几, 周三(3/7 )&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;小时 (小时是一天的进度条) 3)分钟 (分钟是小时的进度条)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://zh.wikipedia.org/wiki/%E6%8B%82%E6%99%93"&gt;拂晓-
维基百科，自由的百科全书&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Day"&gt;Day - Wikipedia&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Sunrise"&gt;Sunrise - Wikipedia&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.douban.com/note/474987993/"&gt;Chronodex：时间饼的用法、研习、使用心得及灵感收集&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.playpcesor.com/2018/05/chronodex.html"&gt;Chronodex
一張圓錶圖完滿每一天，視覺系手帳行事曆上手教學&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;《思考，快与慢》&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;《金字塔原理》&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>time</category><guid>https://alinbxsorcerer.github.io/posts/shi-jian-de-gan-zhi-yu-fen-xi/</guid><pubDate>Wed, 15 May 2019 10:54:19 GMT</pubDate></item><item><title>时间变量的顺序与格式</title><link>https://alinbxsorcerer.github.io/posts/shi-jian-bian-liang-de-shun-xu-yu-ge-shi/</link><dc:creator>David</dc:creator><description>&lt;div&gt;&lt;div class="section" id="id1"&gt;
&lt;h2&gt;时间的感知&lt;/h2&gt;
&lt;p&gt;直觉对时间的感知, 是按照怎么的顺序解析的呢?
从早晨起床这个场景中,分析大脑解析时间的顺序.&lt;/p&gt;
&lt;p&gt;似乎理所当然的一点,Hour(时)排在最前面,Hour:Minute的组合是醒来后第一时间想要获得的信息,以判断上班是否迟到,是否有时间吃早餐?但是再想一层,上班是否迟到?
在处理Hour:Minute之前,潜意识已经先获取并处理完了一个信息:今天是周几?(Weekday).如果是周末的话,几点几分起床并不特别重要.
因此,最先处理的三个变量是Weekday Hour:Minutes&lt;/p&gt;
&lt;p&gt;再看日期,Month-Day,哪个变量在前呢?
如果day在前,则是冗余信息,因为已经weekday在先.
解析日期,首先获取Month,以判断一年的进度,获得当前时间在一年中所处的位置,比如May的含义是一年已经将半.
日期的顺序是Month-Day&lt;/p&gt;
&lt;p&gt;还有变量week number,是对一年进度的另外一种表示.&lt;/p&gt;
&lt;p&gt;最后是Year&lt;/p&gt;
&lt;p&gt;综上, 直觉解析时间的顺序为:
&lt;code class="docutils literal"&gt;Weekday Hour:Minute &lt;span class="pre"&gt;Month-Day&lt;/span&gt; WeekNumber Year&lt;/code&gt;,
要事第一,最重要的信息是Weekday. 合计8个变量, 命名为intuitive time(or
intelligent time)简写为itime&lt;/p&gt;
&lt;p&gt;这也是CTIME时间格式的理念.&lt;/p&gt;
&lt;pre class="literal-block"&gt;In [2]: time.ctime()
Out[2]: 'Wed May 15 08:29:38
[3]:!date
Wed May 15 08:31:45 CST 2019&lt;/pre&gt;
&lt;p&gt;ctime将weekday安排在最前面,然后遵循这个先处理日期的逻辑,May:15跟在后面提高日期的精确颗粒度.但是对大脑的瞬间思考而言,则是冗余信息.因此以itime作为基石,推导拓展到其他时间顺序.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="cron"&gt;
&lt;h2&gt;Cron中时间变量的顺序&lt;/h2&gt;
&lt;p&gt;The sequence matters. 时间变量顺序的第一个应用场景是cron.&lt;/p&gt;
&lt;p&gt;Cron的顺序是Minute:Hour Day:Month Weekday&lt;/p&gt;
&lt;pre class="literal-block"&gt;# ┌───────────── minute (0 - 59)
# │ ┌───────────── hour (0 - 23)
# │ │ ┌───────────── day of the month (1 - 31)
# │ │ │ ┌───────────── month (1 - 12)
# │ │ │ │ ┌───────────── day of the week (0 - 6) (Sunday to Saturday;
# │ │ │ │ │                                   7 is also Sunday on some systems)
# │ │ │ │ │
# │ │ │ │ │
# * * * * * command to execute&lt;/pre&gt;
&lt;p&gt;大脑长于处理模糊宏观的信息,而机器专于精确的信息,将最小的时间单位排在前面,是倒排的ctime.应用的时候也只需要将思考倒叙.&lt;/p&gt;
&lt;p&gt;cron将minute作为最小单位和第一顺序是因为crond按分钟扫描,可见从性能经济性的角度考虑,对大脑和对机器,
秒都是可以忽略的,不然会浪费大量的资源．&lt;/p&gt;
&lt;p&gt;接下来讨论一个问题: 在感知上, minutes:hours 与hours:minutes有何差异呢？&lt;/p&gt;
&lt;p&gt;minutes:hours的顺序，是将精力关注到一个小时之内，比如六点十五=15:06=表达出来是，在从6点到７点这一个小时的时间段内，已经过去了15分钟，知道现在已经消费了一个小时的四分之一(1/4)，接下来就会自然的发问，按照这个进度，等一个小时结束能完成多少工作．
而hours:minutes的顺序，是关注在一天之内，比如=06:15=表达的是，现在是早上时间(6/24)，一天之计在于晨，后面的分钟15只是作为辅助．
总结：hour:minutes(6:15)关注的是一天之内，而minute:hour关注的是一个小时之内，以一个小时为单位做计划和考核产出．&lt;/p&gt;
&lt;p&gt;在直觉上采用哪一个作为基础,等更多的应用总结后,再行确定.暂时采用Hour:Minute的格式,因为minute:hour消耗更多大脑内存和计算资源.&lt;/p&gt;
&lt;p&gt;总结, cron是写给机器读的,对象是机器,因此将ctime倒叙.&lt;/p&gt;
&lt;p&gt;需要记住时间顺序的另外一个应用场景是=journalctl=&lt;/p&gt;
&lt;pre class="literal-block"&gt;journalctl --since  “YYYY-MM-DD HH:MM:SS” --until “YYYY-MM-DD HH:MM:SS”&lt;/pre&gt;
&lt;p&gt;从宏观到微观,从模糊到精确,这是写给人用的时间格式,也是ISO的标准时间格式.&lt;/p&gt;
&lt;p&gt;引用一段话:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Your computer is not a lifeless piece of machinery. It is a dynamic
tool that interacts with your very thought processes. Whenever you
use a computer it becomes, for better or for worse, an extension of
your mind.&lt;/p&gt;
&lt;p&gt;This means that, whenever you use a Unix or Linux system, you are
forging a mental relationship with some of the smartest, most
accomplished (and satisfied) programmers and computer scientists who
ever lived. Such a partnership can't help but have a positive effect
on you.&lt;/p&gt;
&lt;p&gt;As you do, your mind will change for the better, your thought
processes will improve, and your way of looking at the world and at
yourself will change.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;时间的格式&lt;/h2&gt;
&lt;p&gt;以Cron的5个时间变量顺序为基础分析时间表示的格式, 前面加上second+(minute,
hour day, month weekday)后面补充year and weeknumber.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;时间的格式以C, python采用的unix strftime格式为准.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class="literal-block"&gt;|-------------+----------+----------+---------------------+-----------------+-------------------+---------------------+---------------+---------|
| 时间变量    | 1.second | 2.minute | 3.hour              | 4.day           | 5.month           | 6.weekday           | 7.week number | 8.year  |
|-------------+----------+----------+---------------------+-----------------+-------------------+---------------------+---------------+---------|
| 常规符号    | %S 01    | %M 01    | %H 23               | %d 01           | %m 01             | %w (0-6)            | %W            | %y 19   |
| 简单扩展    |          |          | %I (12-hour), %p AM |                 |                   |                     |               | %Y 2019 |
| 文字描述    |          |          |                     |                 | %b Oct, %BOctober | %a Thu, %A Thursday |               |         |
| Obscure扩展 | %f 微秒  |          |                     | % e 1~31 %j 366 |                   | %u(1~7)             | %V %U         | %G 2019 |
|-------------+----------+----------+---------------------+-----------------+-------------------+---------------------+---------------+---------|&lt;/pre&gt;
&lt;p&gt;分析:&lt;/p&gt;
&lt;p&gt;第一行, 钟表时间全部为大写, 日期时间全部为小写,
WeekNumber大写%W与weekday %w相区分; 第二行, 简单扩展, %H是24小时制,
H后面的字母是I,因此用%I表示12小时制,同时%p(postnoon)标注上下午;
大写的%Y表示四位数字的年2019; 第三行, 文字描述,只有两个变量能以文字描述,
weekday和month, 分别用A, B表示.weekday %A还是第一重要的.&lt;/p&gt;
&lt;p&gt;前三行是常规的表示.&lt;/p&gt;
&lt;p&gt;第四行, obscure扩展, 微秒的表示应该是从剩余可选字母中随机确定的,
%f(fly飞逝),和数日子day 366 %j , %e空格padding. weekday与weekNumber在u,
v, w这三个字母上打转, 小写是weekday大写是weekNumber.&lt;/p&gt;
&lt;p&gt;总结: 按照表格前三行可以在一秒钟内永久性记忆, 日常的书写也采用该格式.
日如ctime &lt;code class="docutils literal"&gt;%a %b %d &lt;span class="pre"&gt;%H:%M:%S&lt;/span&gt; %Y&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Timezone的表示&lt;/p&gt;
&lt;pre class="literal-block"&gt;In [7]: !date +"%z"   #UTC offset
+0800
In [8]: !date +"%Z"
CST #China Standard Time&lt;/pre&gt;
&lt;p&gt;快捷方式的format&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In [10]: datetime.now().strftime("%c")      #Locale’s appropriate date and time representation.
Out[10]: 'Thu May  9 11:48:33 2019 #这个格式将weekday放在了前面, 也就是 %a %b的形式.
In [11]: datetime.now().strftime("%x")      #Locale’s appropriate date representation
Out[11]: '05/09/19'
In [12]: datetime.now().strftime("%X")
Out[12]: '11:49:06'&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;10个时间变量,将时区放置在最后.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;%f:%S:%M:%H %d-%m %w %W %Y %Z 日常的书写,使用符号替代minute, hour等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;时间格式的的标准：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;cite&gt;ISO 8601 - Wikipedia &amp;lt;https://en.wikipedia.org/wiki/ISO_8601&amp;gt;&lt;/cite&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;cite&gt;W3C DTF &amp;lt;https://www.w3.org/TR/NOTE-datetime&amp;gt;&lt;/cite&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RFC 822(as updated by RFC 1123)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;cite&gt;RFC 2822 - Internet Message Format &amp;lt;https://tools.ietf.org/html/rfc2822.html&amp;gt;&lt;/cite&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>bash</category><category>python</category><category>time</category><guid>https://alinbxsorcerer.github.io/posts/shi-jian-bian-liang-de-shun-xu-yu-ge-shi/</guid><pubDate>Mon, 13 May 2019 09:38:19 GMT</pubDate></item><item><title>Re.sub参数顺序的问题</title><link>https://alinbxsorcerer.github.io/posts/resubcan-shu-shun-xu-de-wen-ti/</link><dc:creator>David</dc:creator><description>&lt;div&gt;&lt;div class="section" id="id1"&gt;
&lt;h2&gt;提出问题&lt;/h2&gt;
&lt;p&gt;在写 &lt;code class="docutils literal"&gt;re.sub&lt;/code&gt; 或者 &lt;code class="docutils literal"&gt;re.subn&lt;/code&gt; 的时候, 常常会不太确定引用参数的顺序,
需要中断的时间查看提示或者help文档. 比如  &lt;code class="docutils literal"&gt;trade war&lt;/code&gt;
修改为 &lt;code class="docutils literal"&gt;trade negotiation&lt;/code&gt;&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_cedbc269835341c6a7250bded2b3460c-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"war"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"negotiation"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"trade war"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_cedbc269835341c6a7250bded2b3460c-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="s1"&gt;'trade negotiation'&lt;/span&gt;
&lt;a name="rest_code_cedbc269835341c6a7250bded2b3460c-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;repl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_cedbc269835341c6a7250bded2b3460c-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;repl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_cedbc269835341c6a7250bded2b3460c-5"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;_compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;#首先处理regex-pattern&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;分析问题&lt;/h2&gt;
&lt;p&gt;与 &lt;code class="docutils literal"&gt;string.methods&lt;/code&gt; 比较. &lt;code class="docutils literal"&gt;pattern&lt;/code&gt;
是与source(input&lt;sub&gt;string&lt;/sub&gt;)的匹配的内容,
repl是修改后的内容(destination), 这里顺序与=str.replace=是一致.&lt;/p&gt;
&lt;pre class="literal-block"&gt;replace(self, old, new, count=-1, /)&lt;/pre&gt;
&lt;p&gt;old 来自source, new是输出到destination结果中.&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_9e45074fd1bd4360bab1eb1fe2da8360-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="s2"&gt;"trade war"&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"war"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"negotiation"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_9e45074fd1bd4360bab1eb1fe2da8360-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="s1"&gt;'trade negotiation'&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;sed&lt;/code&gt; 也遵循同样的模式.&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_ce0794c4e009425fba362c812a1c9cc0-1"&gt;&lt;/a&gt;s/regexp/replacement/
&lt;a name="rest_code_ce0794c4e009425fba362c812a1c9cc0-2"&gt;&lt;/a&gt;       Attempt  to  match  regexp  against  the  pattern  space.   If successful, replace that portion matched with
&lt;a name="rest_code_ce0794c4e009425fba362c812a1c9cc0-3"&gt;&lt;/a&gt;       replacement.  The replacement may contain the special character &lt;span class="p"&gt;&amp;amp;&lt;/span&gt; to refer to that portion  of  the  pattern
&lt;a name="rest_code_ce0794c4e009425fba362c812a1c9cc0-4"&gt;&lt;/a&gt;       space  which  matched,  and  the  special  escapes &lt;span class="se"&gt;\1&lt;/span&gt; through &lt;span class="se"&gt;\9&lt;/span&gt; to refer to the corresponding matching sub-
&lt;a name="rest_code_ce0794c4e009425fba362c812a1c9cc0-5"&gt;&lt;/a&gt;       expressions in the regexp.
&lt;/pre&gt;&lt;p&gt;regex-pattern匹配 source 数据中的内容,
replacement则是替换后输出到destination结果中.&lt;/p&gt;
&lt;pre class="code shell"&gt;&lt;a name="rest_code_85ca4a9934a34b7d95ee8c53d00a3546-1"&gt;&lt;/a&gt;$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'trade war'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s2"&gt;"s/war/negotiation/g"&lt;/span&gt;
&lt;a name="rest_code_85ca4a9934a34b7d95ee8c53d00a3546-2"&gt;&lt;/a&gt;trade negotiation
&lt;/pre&gt;&lt;p&gt;其他的Text Processing&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_c803033c504f45cfa79070ad2fb09549-1"&gt;&lt;/a&gt;$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"trade-war"&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tr &lt;span class="s2"&gt;"-"&lt;/span&gt; &lt;span class="s2"&gt;"\n"&lt;/span&gt;
&lt;a name="rest_code_c803033c504f45cfa79070ad2fb09549-2"&gt;&lt;/a&gt;trade
&lt;a name="rest_code_c803033c504f45cfa79070ad2fb09549-3"&gt;&lt;/a&gt;war
&lt;a name="rest_code_c803033c504f45cfa79070ad2fb09549-4"&gt;&lt;/a&gt;   tr &lt;span class="o"&gt;[&lt;/span&gt;OPTION&lt;span class="o"&gt;]&lt;/span&gt;... SET1 &lt;span class="o"&gt;[&lt;/span&gt;SET2&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;SET1 is from the source, SET2 is the result of the destination after
been processed.&lt;/p&gt;
&lt;p&gt;总结这种模式和思维惯例:&lt;/p&gt;
&lt;pre class="literal-block"&gt;function source destination&lt;/pre&gt;
&lt;p&gt;Text Processing如此,&lt;/p&gt;
&lt;p&gt;File Handling的utilities遵循同样的模式.&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_37b73f0292574ca4b2bd639acab82fd6-1"&gt;&lt;/a&gt;mv &lt;span class="o"&gt;[&lt;/span&gt;OPTION&lt;span class="o"&gt;]&lt;/span&gt;... SOURCE... DIRECTORY
&lt;a name="rest_code_37b73f0292574ca4b2bd639acab82fd6-2"&gt;&lt;/a&gt;cp &lt;span class="o"&gt;[&lt;/span&gt;OPTION&lt;span class="o"&gt;]&lt;/span&gt;... &lt;span class="o"&gt;[&lt;/span&gt;-T&lt;span class="o"&gt;]&lt;/span&gt; SOURCE DEST
&lt;a name="rest_code_37b73f0292574ca4b2bd639acab82fd6-3"&gt;&lt;/a&gt;ln &lt;span class="o"&gt;[&lt;/span&gt;OPTION&lt;span class="o"&gt;]&lt;/span&gt;... Source... DIRECTORY
&lt;a name="rest_code_37b73f0292574ca4b2bd639acab82fd6-4"&gt;&lt;/a&gt;rsync &lt;span class="o"&gt;[&lt;/span&gt;OPTION...&lt;span class="o"&gt;]&lt;/span&gt; SRC... &lt;span class="o"&gt;[&lt;/span&gt;DEST&lt;span class="o"&gt;]&lt;/span&gt;
&lt;a name="rest_code_37b73f0292574ca4b2bd639acab82fd6-5"&gt;&lt;/a&gt;scp  SRC... DEST
&lt;a name="rest_code_37b73f0292574ca4b2bd639acab82fd6-6"&gt;&lt;/a&gt;dd &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/&lt;span class="o"&gt;{{&lt;/span&gt;source_drive&lt;span class="o"&gt;}}&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/&lt;span class="o"&gt;{{&lt;/span&gt;dest_drive&lt;span class="o"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;例外的情况是tar. =tar=是将目标放在前面.&lt;/p&gt;
&lt;p&gt;再回头看 &lt;code class="docutils literal"&gt;re.sub&lt;/code&gt;&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_f2c882951ec74b2d9b631031007219c7-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;repl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_f2c882951ec74b2d9b631031007219c7-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#扩展后&lt;/span&gt;
&lt;a name="rest_code_f2c882951ec74b2d9b631031007219c7-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pattern_from_source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;replacement_to_result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;source_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;三个参数中 &lt;code class="docutils literal"&gt;pattern_from_source&lt;/code&gt;, &lt;code class="docutils literal"&gt;replacement_to_result&lt;/code&gt; ,
&lt;code class="docutils literal"&gt;source_data&lt;/code&gt;
的最后一个是=source&lt;sub&gt;data&lt;/sub&gt;&lt;code class="docutils literal"&gt;, 将source放置在最后. =grep&lt;/code&gt; 与
=sed=都遵循同样的模式&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_5d04d21e934c43cd959b9e3847e8be58-1"&gt;&lt;/a&gt;sed &lt;span class="s1"&gt;'s/{{regex}}/{{replace}}/'&lt;/span&gt; &lt;span class="o"&gt;{{&lt;/span&gt;filename&lt;span class="o"&gt;}}&lt;/span&gt;
&lt;a name="rest_code_5d04d21e934c43cd959b9e3847e8be58-2"&gt;&lt;/a&gt;grep &lt;span class="o"&gt;[&lt;/span&gt;OPTIONS&lt;span class="o"&gt;]&lt;/span&gt; -e PATTERN ... &lt;span class="o"&gt;[&lt;/span&gt;FILE...&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;#grep regex source&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;例外的情况是=find=&lt;/p&gt;
&lt;pre class="literal-block"&gt;find [-H] [-L] [-P] [-D debugopts] [-Olevel] [starting-point...] [expression]
find [Option] source pattern&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;总结:&lt;/h2&gt;
&lt;p&gt;Data Stream Processing和File Handling遵循 &lt;code class="docutils literal"&gt;subroutine src dst&lt;/code&gt;
模式.两个例外的情况是=tar and find=&lt;/p&gt;
&lt;p&gt;这个问题之所以值得探讨,是因为涉及底层的方法论和工作模式.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>bash</category><category>python</category><category>regex</category><guid>https://alinbxsorcerer.github.io/posts/resubcan-shu-shun-xu-de-wen-ti/</guid><pubDate>Wed, 08 May 2019 09:17:55 GMT</pubDate></item></channel></rss>